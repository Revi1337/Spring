// 스프링의 핵심 구성 요소 (매우 중요)
1. 웹브라우저가 요청을 전송
2. DispatcherServlet 은 그 요청을 처리하기 위한 컨트롤러 객체를 검색. (이 때 DispatcherServlet 는 직접 컨트롤러를 검색하지 않고 HandlerMapping 이라는 Bean 객체에게 컨트롤러 검색을 요청함.)
2-1. HandlerMapping 은 클라이언트의 요청 경로를 이용해서 이를 처리할 컨트롤러 Bean 객체를 DispatcherServlet 에 전달함. (예를 들어, 요청 경로가 /hello 라면 컨트롤러 Bean 중에서 /hello 요청 경로를 처리할 컨트롤러를 리턴하는 것임.ㅣ)
3. DispatcherServlet 는 HandlerMapping 이 찾아준 컨트롤러 객체를 처리할 수 있는 HandlerAdapter Bean에게 요청 처리를 위임함.
4~5. HandlerAdapter 는 컨트롤러에 알맞은 메서드를 호출해서 요청을 처리함
6. 이 때, HandlerAdapter 는 컨트롤러의 처리 결과를 ModelAndView 라는 객체로 변환해서 하고 DispatcherServlet 에 리턴하는 것임. (Model 에 담긴 값은 View 객체에 Map 형식으로 전달됨.)
7. HandlerAdapter 로부터 컨트롤러의 요청 처리 결과를 ModelAndView 로 받으면 DispatcherServlet 는 결과를 보여줄 뷰를 찾기 위해 ViewResolver Bean 객체를 사용함.
7-1. ModelAndView 는 컨트롤러가 리턴한 뷰 이름을 담고 있는데 ViewResolver 는 이 뷰 이름에 해당하는 View 객체를 찾거나 생성해서 리턴함. (응답을 생성하기 위해서 JSP 를 사용하는 ViewResolver 는 매번 새로운 View 객체를 생성하서 DispatcherServlet 에 리턴함.)
8. DispatcherServlet 는 ViewResolver 가 리턴한 View 객체에게 응답 결과 생성을 요청함.
9. JSP 를 사용하는 경우 View 객체는 JSP 를 실행함으로써 웹 브라우저에 전송할 응답 결과를 생성하고 이로써 모든 과정이 끝이남.
// 처리과정을 보면 DispatcherServlet 를 중심으로 HandlerMapping, HandlerAdapter, 컨트롤러, ViewResolver, View, JSP 가 각자 역할을 수행함.
// DispatcherServlet 는 가운데에서 모든 연결을 담당한다고 볼 수 있음.